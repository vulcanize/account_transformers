version: '2.2'

services:

  vulcanizedb:
    build:
      context: ./../../
      dockerfile: dockerfiles/rinkeby/Dockerfile
    container_name: rinkeby_vulcanizedb
    command: "sync --starting-block-number 0 --config /config.toml"
    volumes:
      - "./config.toml:/config.toml"
      - "vulcanizedb_geth_data:/geth"
    networks:
      vulcanizedb_net:

  migrations:
    image: migrate/migrate:v3.3.0
    container_name: rinkeby_vulcanizedb_migrations
    depends_on:
      postgres:
        condition: service_healthy
    command: -database postgresql://postgres:postgres@postgres:5432/vulcanizedb?sslmode=disable -path /migrations up
    volumes:
      - ./../../db/migrations:/migrations
    networks:
      vulcanizedb_net:

  postgres:
    image: postgres:9.6.5-alpine
    container_name: rinkeby_vulcanizedb_postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_DB: vulcanizedb
      POSTGRES_PASSWORD: postgres
    volumes:
      - "vulcanizedb_db_data:/var/lib/postgresql/data"
    networks:
      vulcanizedb_net:
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 5s
      timeout: 5s
      retries: 30
  
  geth:
    image: ethereum/client-go:v1.8.11
    container_name: rinkeby_vulcanizedb_geth
    cpus: 0.3
    hostname: eth
    command: '--rinkeby --rpc --rpcaddr="0.0.0.0" --rpcvhosts="geth"'
    volumes:
      - "vulcanizedb_geth_data:/root/.ethereum/rinkeby"
    networks:
      vulcanizedb_net:

volumes:
  vulcanizedb_geth_data:
  vulcanizedb_db_data:

networks:
  vulcanizedb_net:
    driver: bridge
